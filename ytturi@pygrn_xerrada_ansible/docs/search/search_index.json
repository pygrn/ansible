{
    "docs": [
        {
            "location": "/", 
            "text": "Taller d'Ansible - Inici\n\n\nResum\n\n\nEn aquest taller realitzarem una tasca d'Ansible per desplegar aquesta mateixa documentaci\u00f3.\nEscrita amb Markdown, construida amb mkdocs en un virtualenv de python i servida via Nginx.\n\n\nVeurem diverses funcionalitats d'Ansible, des de les variables i els condicionals t\u00edpics fins\na diversos m\u00f2duls amb que realitzar funcionalitats m\u00e9s concretes.\n\n\nCom ho hem fet?\n\n\nUtilitzant Markdown i Mkdocs, aix\u00ed com utilitzant extensions en python.\n\n\nPodeu accedir al apartat \ninformaci\u00f3 i ajuda\n per veure'n m\u00e9s detalls.\n\n\nCom realitzarem la tasca per desplegar-ho?\n\n\nPodeu accedir a les pases a seguir en l'apartat de \nproc\u00e9s de realitzaci\u00f3\n.\n\n\nAutor\n\n\nRealitzat per:\n Jaume Fl\u00f3rez Valenzuela.\n\n\nProjecte original:\n \"Xerrada i Taller de Python per Python Girona\".\n\n\nEm podeu trobar per:\n\n\n\n\nGitHub: \n@ytturi\n\n\n\n\nRepositori de Python Girona: \ngithub:pygrn/ansible\n\n\nPodeu trobar m\u00e9s informaci\u00f3 sobre \nPython Girona\n en els seg\u00fcents enlla\u00e7os:\n\n\n\n\nGitHub: \n@pygrn\n\n\nTwitter: \n@PythonGirona\n\n\nMeetUp: \n@PythonGirona\n\n\nTelegram: \n@pygrn", 
            "title": "Inici"
        }, 
        {
            "location": "/#taller-dansible-inici", 
            "text": "", 
            "title": "Taller d'Ansible - Inici"
        }, 
        {
            "location": "/#resum", 
            "text": "En aquest taller realitzarem una tasca d'Ansible per desplegar aquesta mateixa documentaci\u00f3.\nEscrita amb Markdown, construida amb mkdocs en un virtualenv de python i servida via Nginx.  Veurem diverses funcionalitats d'Ansible, des de les variables i els condicionals t\u00edpics fins\na diversos m\u00f2duls amb que realitzar funcionalitats m\u00e9s concretes.", 
            "title": "Resum"
        }, 
        {
            "location": "/#com-ho-hem-fet", 
            "text": "Utilitzant Markdown i Mkdocs, aix\u00ed com utilitzant extensions en python.  Podeu accedir al apartat  informaci\u00f3 i ajuda  per veure'n m\u00e9s detalls.", 
            "title": "Com ho hem fet?"
        }, 
        {
            "location": "/#com-realitzarem-la-tasca-per-desplegar-ho", 
            "text": "Podeu accedir a les pases a seguir en l'apartat de  proc\u00e9s de realitzaci\u00f3 .", 
            "title": "Com realitzarem la tasca per desplegar-ho?"
        }, 
        {
            "location": "/#autor", 
            "text": "Realitzat per:  Jaume Fl\u00f3rez Valenzuela.  Projecte original:  \"Xerrada i Taller de Python per Python Girona\".  Em podeu trobar per:   GitHub:  @ytturi   Repositori de Python Girona:  github:pygrn/ansible  Podeu trobar m\u00e9s informaci\u00f3 sobre  Python Girona  en els seg\u00fcents enlla\u00e7os:   GitHub:  @pygrn  Twitter:  @PythonGirona  MeetUp:  @PythonGirona  Telegram:  @pygrn", 
            "title": "Autor"
        }, 
        {
            "location": "/README/", 
            "text": "Taller - Informaci\u00f3 i Ajuda en la realitzaci\u00f3\n\n\nObjectius\n\n\n\n\nTreballar amb Python\n\n\nDesplegar utilitzant Ansible\n\n\nActualitzar \"sense por\" utilitzant Ansible\n\n\nDesplegar i Actualitzar \"massivament\" utilitzant Ansible\n\n\n\n\nRequeriments\n\n\nM\u00e0quines dest\u00ed\n\n\n\n\nDurant el taller ser\u00eda convenient disposar de m\u00e0quines virtuals per realitzar-hi el desplegament.\n\n\nTamb\u00e9 podeu utilitzar Dockers a inicialitzats amb Bash i amb acc\u00e9s a la xarxa.\n\n\n\n\nEl Repositori a clonar \u00e9s p\u00fablic, pel que el podreu clonar sense problemes tant mitjan\u00e7ant HTTPS com amb SSH.\n\n\ngit clone git@github.com:ytturi/pygrn_xerrada_ansible.git\ngit clone https://github.com/ytturi/pygrn_xerrada_ansible.git\n\n\n\n\n\n\nWarning\n\n\nRecordeu que si cloneu per SSH, haureu de generar abans les claus SSL.\n\n\n\n\nConfiguraci\u00f3 local\n\n\nPer tal d'utilitzar ansible, necessitem tenir python instalat. Com sempre, \u00e9s recomanable instalar-lo en un virtualenv.\n\n\nmkvirtualenv ansible\npip install ansible\n\n\n\n\nTamb\u00e9 caldr\u00e0 configurar-nos un entorn per l'Ansible, per exemple seguint l'esquelet de les diapositives.\n\n\n# Creem el directori arrel\nmkdir ~/projectes/pygrn_ansible\ncd ~/projectes/pygrn_ansible\n\n# Creem el directori de tasques\nmkdir tasks\n\n# Creem el fitxer d'inventari amb les direccions corresponents\nvim inventory.yml\n\n\n\n\nA partir d'aqui podem treballar amb la tasca \"\ntasks/deploy_docs.yml\n\"\n\n\nDocumentaci\u00f3\n\n\nContingut utilitzat per aquesta documentaci\u00f3\n\n\n\n\nMkDocs\n, tractat en la \nxerrada sobre contingut est\u00e0tic\n\n\nExtensi\u00f3 \nAdmonition\n, una extensi\u00f3 que ens permet utilitzar \"Notes\". Originaria de rST, realitza un recuadre de contingut amb un t\u00edtol.\n\n\nExtensi\u00f3 \nDetails\n, la trobem dins del paquet PyMdown. Ens permet afegir notes com Admonition, per\u00f2 desplegables.\n\n\nTema \nMaterial\n, un tema per la documentaci\u00f3 MKDOCS i ReadTheDocs, que millora gr\u00e0ficament aquesta p\u00e0gina\n\n\n\n\n\n\nVirtualenv\n, aquesta llibreria que segurament ja coneixeu i ens permet no instalar coses directament al sistema.\n\n\n\n\nExemple de fitxer YML per Ansible\n\n\nPossibles m\u00f2duls de Ansible que us vindr\u00e0n b\u00e9\n\n\n\n\nAPT\n, ens permet realitzar les diferents funcionalitats del APT de Debian.\n\n\nGIT\n, ens permet fer els desplegaments i actualitzacions corresponents de GIT.\n\n\nPIP\n, ens permet tractar amb llibreries i Virtualenvs\n\n\nSYSTEMD\n, ens permet gestionar els serveis de la m\u00e0quina\n\n\nTractament de fitxers:\n\n\nFILE\n, actualitzar els atributs dels fitxers i/o realitzar links\n\n\nCOPY\n, copiar un fitxer des d'on despleguem a les m\u00e0quines dest\u00ed\n\n\nTEMPLATE\n, realitzar un fitxer a partir del valor de diferents variables\n\n\nLineInFile\n, assegurar-nos que hi ha (o no) una l\u00ednia en el fitxer\n\n\nREPLACE\n, reempla\u00e7a totes les inst\u00e0ncies de les l\u00ednies indicades pel valor indicat\n\n\n\n\n\n\nExecuci\u00f3 remota de shell:\n\n\nSCRIPT\n, ens permet executar un script de shell, ja estigui en local o en remot, en el servidor remot\n\n\nSHELL\n, permet executar una comanda en el servidor remot.\n\n\nCOMMAND\n, executa una comanda en el servidor remot", 
            "title": "Informaci\u00f3 i Ajuda"
        }, 
        {
            "location": "/README/#taller-informacio-i-ajuda-en-la-realitzacio", 
            "text": "", 
            "title": "Taller - Informaci\u00f3 i Ajuda en la realitzaci\u00f3"
        }, 
        {
            "location": "/README/#objectius", 
            "text": "Treballar amb Python  Desplegar utilitzant Ansible  Actualitzar \"sense por\" utilitzant Ansible  Desplegar i Actualitzar \"massivament\" utilitzant Ansible", 
            "title": "Objectius"
        }, 
        {
            "location": "/README/#requeriments", 
            "text": "", 
            "title": "Requeriments"
        }, 
        {
            "location": "/README/#maquines-desti", 
            "text": "Durant el taller ser\u00eda convenient disposar de m\u00e0quines virtuals per realitzar-hi el desplegament.  Tamb\u00e9 podeu utilitzar Dockers a inicialitzats amb Bash i amb acc\u00e9s a la xarxa.   El Repositori a clonar \u00e9s p\u00fablic, pel que el podreu clonar sense problemes tant mitjan\u00e7ant HTTPS com amb SSH.  git clone git@github.com:ytturi/pygrn_xerrada_ansible.git\ngit clone https://github.com/ytturi/pygrn_xerrada_ansible.git   Warning  Recordeu que si cloneu per SSH, haureu de generar abans les claus SSL.", 
            "title": "M\u00e0quines dest\u00ed"
        }, 
        {
            "location": "/README/#configuracio-local", 
            "text": "Per tal d'utilitzar ansible, necessitem tenir python instalat. Com sempre, \u00e9s recomanable instalar-lo en un virtualenv.  mkvirtualenv ansible\npip install ansible  Tamb\u00e9 caldr\u00e0 configurar-nos un entorn per l'Ansible, per exemple seguint l'esquelet de les diapositives.  # Creem el directori arrel\nmkdir ~/projectes/pygrn_ansible\ncd ~/projectes/pygrn_ansible\n\n# Creem el directori de tasques\nmkdir tasks\n\n# Creem el fitxer d'inventari amb les direccions corresponents\nvim inventory.yml  A partir d'aqui podem treballar amb la tasca \" tasks/deploy_docs.yml \"", 
            "title": "Configuraci\u00f3 local"
        }, 
        {
            "location": "/README/#documentacio", 
            "text": "", 
            "title": "Documentaci\u00f3"
        }, 
        {
            "location": "/README/#contingut-utilitzat-per-aquesta-documentacio", 
            "text": "MkDocs , tractat en la  xerrada sobre contingut est\u00e0tic  Extensi\u00f3  Admonition , una extensi\u00f3 que ens permet utilitzar \"Notes\". Originaria de rST, realitza un recuadre de contingut amb un t\u00edtol.  Extensi\u00f3  Details , la trobem dins del paquet PyMdown. Ens permet afegir notes com Admonition, per\u00f2 desplegables.  Tema  Material , un tema per la documentaci\u00f3 MKDOCS i ReadTheDocs, que millora gr\u00e0ficament aquesta p\u00e0gina    Virtualenv , aquesta llibreria que segurament ja coneixeu i ens permet no instalar coses directament al sistema.", 
            "title": "Contingut utilitzat per aquesta documentaci\u00f3"
        }, 
        {
            "location": "/README/#exemple-de-fitxer-yml-per-ansible", 
            "text": "", 
            "title": "Exemple de fitxer YML per Ansible"
        }, 
        {
            "location": "/README/#possibles-moduls-de-ansible-que-us-vindran-be", 
            "text": "APT , ens permet realitzar les diferents funcionalitats del APT de Debian.  GIT , ens permet fer els desplegaments i actualitzacions corresponents de GIT.  PIP , ens permet tractar amb llibreries i Virtualenvs  SYSTEMD , ens permet gestionar els serveis de la m\u00e0quina  Tractament de fitxers:  FILE , actualitzar els atributs dels fitxers i/o realitzar links  COPY , copiar un fitxer des d'on despleguem a les m\u00e0quines dest\u00ed  TEMPLATE , realitzar un fitxer a partir del valor de diferents variables  LineInFile , assegurar-nos que hi ha (o no) una l\u00ednia en el fitxer  REPLACE , reempla\u00e7a totes les inst\u00e0ncies de les l\u00ednies indicades pel valor indicat    Execuci\u00f3 remota de shell:  SCRIPT , ens permet executar un script de shell, ja estigui en local o en remot, en el servidor remot  SHELL , permet executar una comanda en el servidor remot.  COMMAND , executa una comanda en el servidor remot", 
            "title": "Possibles m\u00f2duls de Ansible que us vindr\u00e0n b\u00e9"
        }, 
        {
            "location": "/proces/", 
            "text": "Taller - Realitzaci\u00f3 de la tasca\n\n\nPer tal de facilitar el proc\u00e9s, he extrapolat els processos que farem dins la tasca.\n\n\nSi ho necessiteu, he afegit \"Tips\" que mostren quines comandes executariem en local.\nAdicionalment, he afegit en cada pas alguns m\u00f2duls d'Ansible que us poden ser \u00fatils.\n\n\nDesplegament\n\n\nEl desplegament amb ansible \u00e9s senzill. S\u00edmplement utilitzarem la seg\u00fcent comanda:\n\n\n# Primer cal estar on hem configurat l'entorn\nworkon ansible\ncd ~/projectes/pygrn_ansible\n\n# Fem correr la tasca per un inventari en concret\nansible-playbook tasks/deploy_docs.yml -i inventory.yml\n\n\n\n\nPassos a realitzar en la tasca\n\n\nTractament de peticions HTTP/S\n\n\nPosarem un Nginx amb la configuraci\u00f3 facilitada en el repositori de la xerrada:\n\n\n\n\npygrn_xerrada_ansible/taller/docs_nginx.conf\n\n\n\n\nPer tal de desplegar-ho, hem de pensar les passes que seguiriem en local i adaptar-ho a Ansible.\n\n\nPasses que seguiriem en local\nInstalar Nginx amb \napt-get install nginx\n \n(\nopcional\n) Eliminar la configuraci\u00f3 per defecte\nAfegir la configuraci\u00f3 nova a \"\nsites-available\n\"\nRealitzar un link simbolic a \"\nsites-enabled\n\"\nCodi amb bash\nsudo apt-get install nginx\nsudo rm /etc/nginx/sites-enabled/default\nsudo cp /.../pygrn_xerrada_ansible/taller/docs_nginx.conf /etc/nginx/sites-available/docs\nsudo ln -s /etc/nginx/sites-available/docs /etc/nginx/sites-enabled/docs\n\nWarning\nCom que utilitzem fitxers protegits cal utilitzar \nsudo\n!\nM\u00f2duls que ens poden ajudar\nAPT\nFile\nCopy\n\n\nInfo\n\n\nNo cal que compilem, utilitzem el mateix que podria venir amb un debian amb els repositoris de APT.\n\n\n\n\nClonar el repositori\n\n\nAquesta documentaci\u00f3 es troba en el repositori de github de la xerrada: \ngithub:ytturi/pygrn_xerrada_ansible\n.\n\n\nAll\u00e0 hi tenim el directori \"\ntaller/documentacio_estatica\n\" on trobarem:\n\n\n\n\nEl fitxer de configuraci\u00f3 de mkdocs (\"mkdocs.yml\"),\n\n\nEls requeriments de pyhton (\"requirements.txt\") \n\n\nLa documentaci\u00f3 en format Markdown en el directori \"docs\".\n\n\n\n\nPasses que realitzariem en local\nAnar al directori de projectes\nMirar si existeix el repositori\nSi no hi \u00e9s el clonem amb \ngit clone https://github.com/ytturi/pygrn_xerrada_ansible.git\nSi hi \u00e9s, l'actualitzem amb \ngit pull\nM\u00f2duls que ens poden ajudar\nGIT\nConfigurar Python\n\n\nVolem utilitzar MkDocs per realitzar el render de la p\u00e0gina. \nPer\u00f2 com fem (o hauriem de fer) amb la resta de projectes que treballem,\n\u00e9s millor instalar els requeriments en un virtualenv.\n\n\nPer aquest motiu, el que farem ser\u00e0 utilitzar un virtualenv on hi instalarem els requeriments del repositori.\n\n\nPasses que realitzariem en local\nMirar si existeix la carpeta del virtualenv i activar-lo\nSi no existeix, en creem un de nou\nAnar a la carpeta del projecte\nInstalar els requeriments del projecte (del fitxer requirements.txt)\nM\u00f2duls que ens poden ajudar\nPIP\nBuild de la documentaci\u00f3\n\n\nUna vegada tenim l'entorn preparat, hem de realitzar build de la documentaci\u00f3 per servir-la.\nRealitzarem el build executant la comanda \nmkdocs build -d \"../built_docs\"\n des del virtualenv anterior.\n\n\nExecutar una comanda des d'un virtualenv sense ser-hi\nPer tal d'executar una comanda des d'un virtualenv en una sola l\u00ednia podem cridar-la utilitzant\ntot el \npath\n del virtualenv.\nPer exemple si tenim el virtualenv en el directori: \n/home/usuari/.virtualenvs/documentacio\nPodem utilitzar: \n/home/usuari/.virtualenvs/documentacio/bin/mkdocs\nSempre cal fer build de la documentaci\u00f3?\nNo sempre cal fer build. Per\u00f2 en el repositori tenim Markdown, i els fitxers a servir s\u00f3n HTML.\nCom sabem si s'han modificat?\nAquests casos s\u00f3n m\u00e9s dif\u00edcils de tractar, pel que millor fem build cada vegada.\n\n\nImportant\n\n\nPer tal de tocar m\u00e9s funcionalitats d'Ansible, com els condicionals i els \"register\", \nafegirem la seg\u00fcent condici\u00f3 en aquest pas:\n\n\n\n\nSi ja teniem el repositori clonat i no s'ha d'actualitzar\n\n\n\n\n\n\n\n\nImportant\n\n\nSi no ho heu fet fins ara, ser\u00eda interessant que utilitzessiu variables per els directoris afectats:\n\n\n\n\nVirtualenv\n\n\nDocumentaci\u00f3\n\n\nHTML\n\n\n\n\nSi ho feu, podreu executar la comanda utilitzant-les, com ara:\n\n\n{{ venv }}/bin/mkdocs build -c {{ docs }}/mkdocs.yml  -d {{ projectes }}/built_docs\n\n\n\n\nPasses que realitzariem en local\nEn el pas de \"\nClonar el repositori\n\" ja sabrem si s'ha actualitzat o\n   ha canviat algun fitxer del repositori. Si no ha canviat res, no farem aquest pas.\nRealitzarem el build executant la comanda \nmkdocs build -d \"../built_docs\"\nM\u00f2duls que ens poden ajudar\nSCRIPT\nSHELL\nCOMMAND\nActualitzaci\u00f3 dels fitxers a servir\n\n\nAquesta part \u00e9s la m\u00e9s senzilla. Com que tot ho servim via Nginx,\ns\u00edmplement cal que els fitxers a servir es modifiquin.\n\n\nHo podem fer de varies maneres:\n\n\n\n\nDespr\u00e9s de fer build, movem o copiem els fitxers en el directori que serveix el NginX.\n\n\nPodem assegurar-nos de que hi ha un link de la carpeta dels fitxers a la carpeta que serveix NginX.\n\n\n\n\nM\u00f2duls que us poden ajudar\nFILE\nCOMMAND", 
            "title": "Proc\u00e9s de realitzaci\u00f3"
        }, 
        {
            "location": "/proces/#taller-realitzacio-de-la-tasca", 
            "text": "Per tal de facilitar el proc\u00e9s, he extrapolat els processos que farem dins la tasca.  Si ho necessiteu, he afegit \"Tips\" que mostren quines comandes executariem en local.\nAdicionalment, he afegit en cada pas alguns m\u00f2duls d'Ansible que us poden ser \u00fatils.", 
            "title": "Taller - Realitzaci\u00f3 de la tasca"
        }, 
        {
            "location": "/proces/#desplegament", 
            "text": "El desplegament amb ansible \u00e9s senzill. S\u00edmplement utilitzarem la seg\u00fcent comanda:  # Primer cal estar on hem configurat l'entorn\nworkon ansible\ncd ~/projectes/pygrn_ansible\n\n# Fem correr la tasca per un inventari en concret\nansible-playbook tasks/deploy_docs.yml -i inventory.yml", 
            "title": "Desplegament"
        }, 
        {
            "location": "/proces/#passos-a-realitzar-en-la-tasca", 
            "text": "", 
            "title": "Passos a realitzar en la tasca"
        }, 
        {
            "location": "/proces/#tractament-de-peticions-https", 
            "text": "Posarem un Nginx amb la configuraci\u00f3 facilitada en el repositori de la xerrada:   pygrn_xerrada_ansible/taller/docs_nginx.conf   Per tal de desplegar-ho, hem de pensar les passes que seguiriem en local i adaptar-ho a Ansible.  Passes que seguiriem en local Instalar Nginx amb  apt-get install nginx   ( opcional ) Eliminar la configuraci\u00f3 per defecte Afegir la configuraci\u00f3 nova a \" sites-available \" Realitzar un link simbolic a \" sites-enabled \" Codi amb bash sudo apt-get install nginx\nsudo rm /etc/nginx/sites-enabled/default\nsudo cp /.../pygrn_xerrada_ansible/taller/docs_nginx.conf /etc/nginx/sites-available/docs\nsudo ln -s /etc/nginx/sites-available/docs /etc/nginx/sites-enabled/docs Warning Com que utilitzem fitxers protegits cal utilitzar  sudo ! M\u00f2duls que ens poden ajudar APT File Copy  Info  No cal que compilem, utilitzem el mateix que podria venir amb un debian amb els repositoris de APT.", 
            "title": "Tractament de peticions HTTP/S"
        }, 
        {
            "location": "/proces/#clonar-el-repositori", 
            "text": "Aquesta documentaci\u00f3 es troba en el repositori de github de la xerrada:  github:ytturi/pygrn_xerrada_ansible .  All\u00e0 hi tenim el directori \" taller/documentacio_estatica \" on trobarem:   El fitxer de configuraci\u00f3 de mkdocs (\"mkdocs.yml\"),  Els requeriments de pyhton (\"requirements.txt\")   La documentaci\u00f3 en format Markdown en el directori \"docs\".   Passes que realitzariem en local Anar al directori de projectes Mirar si existeix el repositori Si no hi \u00e9s el clonem amb  git clone https://github.com/ytturi/pygrn_xerrada_ansible.git Si hi \u00e9s, l'actualitzem amb  git pull M\u00f2duls que ens poden ajudar GIT", 
            "title": "Clonar el repositori"
        }, 
        {
            "location": "/proces/#configurar-python", 
            "text": "Volem utilitzar MkDocs per realitzar el render de la p\u00e0gina. \nPer\u00f2 com fem (o hauriem de fer) amb la resta de projectes que treballem,\n\u00e9s millor instalar els requeriments en un virtualenv.  Per aquest motiu, el que farem ser\u00e0 utilitzar un virtualenv on hi instalarem els requeriments del repositori.  Passes que realitzariem en local Mirar si existeix la carpeta del virtualenv i activar-lo Si no existeix, en creem un de nou Anar a la carpeta del projecte Instalar els requeriments del projecte (del fitxer requirements.txt) M\u00f2duls que ens poden ajudar PIP", 
            "title": "Configurar Python"
        }, 
        {
            "location": "/proces/#build-de-la-documentacio", 
            "text": "Una vegada tenim l'entorn preparat, hem de realitzar build de la documentaci\u00f3 per servir-la.\nRealitzarem el build executant la comanda  mkdocs build -d \"../built_docs\"  des del virtualenv anterior.  Executar una comanda des d'un virtualenv sense ser-hi Per tal d'executar una comanda des d'un virtualenv en una sola l\u00ednia podem cridar-la utilitzant\ntot el  path  del virtualenv. Per exemple si tenim el virtualenv en el directori:  /home/usuari/.virtualenvs/documentacio Podem utilitzar:  /home/usuari/.virtualenvs/documentacio/bin/mkdocs Sempre cal fer build de la documentaci\u00f3? No sempre cal fer build. Per\u00f2 en el repositori tenim Markdown, i els fitxers a servir s\u00f3n HTML. Com sabem si s'han modificat? Aquests casos s\u00f3n m\u00e9s dif\u00edcils de tractar, pel que millor fem build cada vegada.  Important  Per tal de tocar m\u00e9s funcionalitats d'Ansible, com els condicionals i els \"register\", \nafegirem la seg\u00fcent condici\u00f3 en aquest pas:   Si ja teniem el repositori clonat i no s'ha d'actualitzar     Important  Si no ho heu fet fins ara, ser\u00eda interessant que utilitzessiu variables per els directoris afectats:   Virtualenv  Documentaci\u00f3  HTML   Si ho feu, podreu executar la comanda utilitzant-les, com ara:  {{ venv }}/bin/mkdocs build -c {{ docs }}/mkdocs.yml  -d {{ projectes }}/built_docs   Passes que realitzariem en local En el pas de \" Clonar el repositori \" ja sabrem si s'ha actualitzat o\n   ha canviat algun fitxer del repositori. Si no ha canviat res, no farem aquest pas. Realitzarem el build executant la comanda  mkdocs build -d \"../built_docs\" M\u00f2duls que ens poden ajudar SCRIPT SHELL COMMAND", 
            "title": "Build de la documentaci\u00f3"
        }, 
        {
            "location": "/proces/#actualitzacio-dels-fitxers-a-servir", 
            "text": "Aquesta part \u00e9s la m\u00e9s senzilla. Com que tot ho servim via Nginx,\ns\u00edmplement cal que els fitxers a servir es modifiquin.  Ho podem fer de varies maneres:   Despr\u00e9s de fer build, movem o copiem els fitxers en el directori que serveix el NginX.  Podem assegurar-nos de que hi ha un link de la carpeta dels fitxers a la carpeta que serveix NginX.   M\u00f2duls que us poden ajudar FILE COMMAND", 
            "title": "Actualitzaci\u00f3 dels fitxers a servir"
        }
    ]
}